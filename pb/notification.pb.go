// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushNotificationRequest struct {
	Base                       *BaseRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserID                     int64        `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Title                      string       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message                    string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	SendAsMailIfNoTokenPresent bool         `protobuf:"varint,5,opt,name=SendAsMailIfNoTokenPresent,proto3" json:"SendAsMailIfNoTokenPresent,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}     `json:"-"`
	XXX_unrecognized           []byte       `json:"-"`
	XXX_sizecache              int32        `json:"-"`
}

func (m *PushNotificationRequest) Reset()         { *m = PushNotificationRequest{} }
func (m *PushNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*PushNotificationRequest) ProtoMessage()    {}
func (*PushNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_notification_6f5c1f92925b1e67, []int{0}
}
func (m *PushNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushNotificationRequest.Unmarshal(m, b)
}
func (m *PushNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushNotificationRequest.Marshal(b, m, deterministic)
}
func (dst *PushNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushNotificationRequest.Merge(dst, src)
}
func (m *PushNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_PushNotificationRequest.Size(m)
}
func (m *PushNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushNotificationRequest proto.InternalMessageInfo

func (m *PushNotificationRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *PushNotificationRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *PushNotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PushNotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PushNotificationRequest) GetSendAsMailIfNoTokenPresent() bool {
	if m != nil {
		return m.SendAsMailIfNoTokenPresent
	}
	return false
}

type MailNotificationRequest struct {
	Base                 *BaseRequest     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UserID               int64            `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Subject              string           `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Content              string           `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	ContentType          EmailContentType `protobuf:"varint,5,opt,name=ContentType,proto3,enum=pb.EmailContentType" json:"ContentType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MailNotificationRequest) Reset()         { *m = MailNotificationRequest{} }
func (m *MailNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*MailNotificationRequest) ProtoMessage()    {}
func (*MailNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_notification_6f5c1f92925b1e67, []int{1}
}
func (m *MailNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MailNotificationRequest.Unmarshal(m, b)
}
func (m *MailNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MailNotificationRequest.Marshal(b, m, deterministic)
}
func (dst *MailNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MailNotificationRequest.Merge(dst, src)
}
func (m *MailNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_MailNotificationRequest.Size(m)
}
func (m *MailNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MailNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MailNotificationRequest proto.InternalMessageInfo

func (m *MailNotificationRequest) GetBase() *BaseRequest {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *MailNotificationRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *MailNotificationRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *MailNotificationRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MailNotificationRequest) GetContentType() EmailContentType {
	if m != nil {
		return m.ContentType
	}
	return EmailContentType_text
}

func init() {
	proto.RegisterType((*PushNotificationRequest)(nil), "pb.PushNotificationRequest")
	proto.RegisterType((*MailNotificationRequest)(nil), "pb.MailNotificationRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	SendPushNotification(ctx context.Context, in *PushNotificationRequest, opts ...grpc.CallOption) (*Empty, error)
	SendMailNotification(ctx context.Context, in *MailNotificationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) SendPushNotification(ctx context.Context, in *PushNotificationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.NotificationService/SendPushNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) SendMailNotification(ctx context.Context, in *MailNotificationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.NotificationService/SendMailNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	SendPushNotification(context.Context, *PushNotificationRequest) (*Empty, error)
	SendMailNotification(context.Context, *MailNotificationRequest) (*Empty, error)
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_SendPushNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).SendPushNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.NotificationService/SendPushNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).SendPushNotification(ctx, req.(*PushNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_SendMailNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MailNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).SendMailNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.NotificationService/SendMailNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).SendMailNotification(ctx, req.(*MailNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPushNotification",
			Handler:    _NotificationService_SendPushNotification_Handler,
		},
		{
			MethodName: "SendMailNotification",
			Handler:    _NotificationService_SendMailNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification.proto",
}

func init() { proto.RegisterFile("notification.proto", fileDescriptor_notification_6f5c1f92925b1e67) }

var fileDescriptor_notification_6f5c1f92925b1e67 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0xc4, 0x7d, 0xd2, 0x2d, 0x02, 0xc9, 0x54, 0xd4, 0x2a, 0x97, 0xa8, 0x5c, 0x72, 0xea, 0xa1,
	0x48, 0x1c, 0x11, 0xcf, 0x43, 0x0f, 0x54, 0x95, 0xdb, 0x1f, 0xb0, 0xc3, 0xb6, 0x18, 0x52, 0x3b,
	0xc4, 0x0e, 0x52, 0x3f, 0x85, 0xdf, 0xe1, 0xc0, 0x77, 0x21, 0x27, 0xa9, 0x14, 0x2a, 0x95, 0x13,
	0x37, 0xcf, 0xce, 0x68, 0x76, 0x67, 0xd7, 0x40, 0xb5, 0x71, 0x6a, 0xa9, 0x22, 0xe1, 0x94, 0xd1,
	0xa3, 0x24, 0x35, 0xce, 0xd0, 0x5a, 0x22, 0x07, 0x47, 0xab, 0xd8, 0x48, 0x11, 0x17, 0x95, 0xe1,
	0x37, 0x81, 0xfe, 0x2c, 0xb3, 0x2f, 0xd3, 0x8a, 0x98, 0xe3, 0x7b, 0x86, 0xd6, 0xd1, 0x0b, 0x68,
	0x48, 0x61, 0x91, 0x91, 0x80, 0x84, 0xdd, 0xf1, 0xc9, 0x28, 0x91, 0xa3, 0x3b, 0x61, 0xb1, 0xa4,
	0x79, 0x4e, 0xd2, 0x33, 0x68, 0x65, 0x16, 0xd3, 0xc9, 0x03, 0xab, 0x05, 0x24, 0xac, 0xf3, 0x12,
	0xd1, 0x1e, 0x34, 0x9d, 0x72, 0x31, 0xb2, 0x7a, 0x40, 0xc2, 0x0e, 0x2f, 0x00, 0x65, 0xd0, 0x5e,
	0xa3, 0xb5, 0x62, 0x85, 0xac, 0x91, 0xd7, 0xb7, 0x90, 0x5e, 0xc3, 0x60, 0x8e, 0xfa, 0xf9, 0xd6,
	0x3e, 0x09, 0x15, 0x4f, 0x96, 0x53, 0xb3, 0x30, 0x6f, 0xa8, 0x67, 0x29, 0x5a, 0xd4, 0x8e, 0x35,
	0x03, 0x12, 0x1e, 0xf2, 0x3f, 0x14, 0xc3, 0x2f, 0x02, 0x7d, 0x4f, 0xfc, 0x7b, 0x10, 0x06, 0x6d,
	0x9b, 0xc9, 0x57, 0x8c, 0x5c, 0x19, 0x65, 0x0b, 0x3d, 0x13, 0x19, 0xed, 0xfc, 0x7c, 0x65, 0x98,
	0x12, 0xd2, 0x2b, 0xe8, 0xde, 0x17, 0xcf, 0xc5, 0x26, 0xc1, 0x7c, 0xfa, 0xe3, 0x71, 0xcf, 0xf7,
	0x7d, 0x5c, 0x0b, 0x15, 0x57, 0x38, 0x5e, 0x15, 0x8e, 0x3f, 0x09, 0x9c, 0x56, 0x03, 0xcc, 0x31,
	0xfd, 0x50, 0x11, 0xd2, 0x1b, 0xe8, 0xf9, 0xe8, 0xbb, 0x87, 0xa2, 0xe7, 0xde, 0x72, 0xcf, 0xf9,
	0x06, 0x9d, 0xa2, 0x5f, 0xe2, 0x36, 0xc3, 0x83, 0xad, 0xc3, 0xee, 0x86, 0x0a, 0x87, 0x3d, 0x7b,
	0xfb, 0xe5, 0x20, 0x5b, 0xf9, 0x87, 0xb9, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xb6, 0x0d,
	0xe4, 0x58, 0x02, 0x00, 0x00,
}
